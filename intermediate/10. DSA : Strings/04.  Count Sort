Problem Description
Given an array A. Sort this array using Count Sort Algorithm and return the sorted array.

Problem Constraints
1 <= |A| <= 105
1 <= A[i] <= 105


Input Format
The first argument is an integer array A.


Output Format
Return an integer array that is the sorted array A.


Example Input
Input 1:
A = [1, 3, 1]
Input 2:
A = [4, 2, 1, 3]


Example Output
Output 1:
[1, 1, 3]
Output 2:
[1, 2, 3, 4]


Example Explanation
For Input 1:
The array in sorted order is [1, 1, 3].
For Input 2:
The array in sorted order is [1, 2, 3, 4].


SOLUTION:
class Solution:
    # @param A : list of integers
    # @return a list of integers
    def solve(self, A):
                                              # for this I used an index array upto max elemnt of A not 10**5 to save time
        max1=float("-inf")
        for i in A:
            if i >max1:
                max1=i          

        index=[0]*(max1+1)           # created an index array starting from 0 upto max elemnt as end
        for i in A:
            index[i]+=1              # here whatever be elemnt of A its index  will get its total count\

        ans=[]
        for i in range(max1+1):       # picks elemnt one by one
            ans+=index[i]*[i]         # in ans array the value of index * single elemnt array =[el,el,el,...(upto its value in index)]
        return ans
