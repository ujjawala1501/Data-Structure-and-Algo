Problem Description
Given an integer array A of size N and an integer B, you have to return the same array after rotating it B times towards the right.


Problem Constraints
1 <= N <= 105
1 <= A[i] <=109
1 <= B <= 109


Input Format
The first argument given is the integer array A.
The second argument given is the integer B.


Output Format
Return the array A after rotating it B times to the right


Example Input
Input 1:

A = [1, 2, 3, 4]
B = 2
Input 2:

A = [2, 5, 6]
B = 1


Example Output
Output 1:

[3, 4, 1, 2]
Output 2:

[6, 2, 5]


Example Explanation
Explanation 1:

Rotate towards the right 2 times - [1, 2, 3, 4] => [4, 1, 2, 3] => [3, 4, 1, 2]
Explanation 2:

Rotate towards the right 1 time - [2, 5, 6] => [6, 2, 5]

SOLUTION 1:

class Solution:
    # @param A : list of integers
    # @param B : integer
    # @return a list of integers
    def solve(self, A, B):
        d1=0
        d2=len(A)-1
        while d1<d2:
            A[d1],A[d2]=A[d2],A[d1]
            d1+=1
            d2-=1
        #for i in range(len(A)-1,-1,-1):
        #    C.append(A[i])
        B= B % len(A)
        p1=0
        p2=B-1
        k1=B
        k2=len(A)-1
        while p1<p2:
            A[p1],A[p2]=A[p2],A[p1]
            p1+=1
            p2-=1
        while k1<k2:
            A[k1],A[k2]=A[k2],A[k1]
            k1+=1
            k2-=1
        return A


SOLUTION 2:

def reverse(A, start, end):
    i, j = start, end
    while(i < j):
        temp = A[i]
        A[i] = A[j]
        A[j] = temp
        i, j = i + 1, j - 1

class Solution:
    # @param A : list of integers
    # @param B : integer
    # @return a list of integers
    def solve(self, A, B):
        N = len(A)
        B = B % N
        reverse(A, 0, N - 1);
        reverse(A, 0, B - 1);
        reverse(A, B, N - 1);
        return A
        
